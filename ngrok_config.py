"""
Configuraci√≥n de Ngrok para TechSphere API
"""
import os
from pyngrok import ngrok
import logging

logger = logging.getLogger(__name__)

def setup_ngrok(port=8000, auth_token=None):
    """
    Configura Ngrok para exponer la API a la web
    
    Args:
        port (int): Puerto donde corre la API (default: 8000)
        auth_token (str): Token de autenticaci√≥n de Ngrok (opcional)
    
    Returns:
        str: URL p√∫blica de Ngrok
    """
    try:
        # Si se proporciona un token de autenticaci√≥n, configurarlo
        if auth_token:
            ngrok.set_auth_token(auth_token)
            logger.info("‚úÖ Token de Ngrok configurado")
        
        # Crear t√∫nel HTTP
        public_url = ngrok.connect(port, "http")
        logger.info(f"üåê Ngrok t√∫nel creado: {public_url}")
        
        # Mostrar informaci√≥n √∫til
        print(f"\nüöÄ TechSphere API est√° disponible p√∫blicamente en:")
        print(f"   üì° URL p√∫blica: {public_url}")
        print(f"   üìñ Documentaci√≥n: {public_url}/api/v1/docs")
        print(f"   üîç Redoc: {public_url}/api/v1/redoc")
        print(f"   üí° Health check: {public_url}/api/v1/health")
        print(f"\nüîß Panel de Ngrok: http://localhost:4040")
        print("   (Para ver estad√≠sticas y logs del t√∫nel)\n")
        
        return public_url
        
    except Exception as e:
        logger.error(f"‚ùå Error configurando Ngrok: {str(e)}")
        print(f"‚ùå Error configurando Ngrok: {str(e)}")
        print("üí° Posibles soluciones:")
        print("   1. Instala Ngrok: https://ngrok.com/download")
        print("   2. Crea una cuenta gratuita en https://ngrok.com/")
        print("   3. Configura tu token: ngrok config add-authtoken <tu-token>")
        return None

def get_ngrok_auth_token():
    """
    Obtiene el token de autenticaci√≥n de Ngrok desde variables de entorno
    
    Returns:
        str: Token de autenticaci√≥n o None
    """
    return os.getenv("NGROK_AUTH_TOKEN")

def cleanup_ngrok():
    """
    Limpia los t√∫neles de Ngrok al finalizar
    """
    try:
        ngrok.disconnect()
        ngrok.kill()
        logger.info("üßπ T√∫neles de Ngrok cerrados correctamente")
    except Exception as e:
        logger.warning(f"‚ö†Ô∏è  Error cerrando t√∫neles de Ngrok: {str(e)}")
